import net.researchgate.release.GitAdapter

group 'net.eraga.rxusb'
version "$version"

buildscript {
    ext.kotlin_version = '1.2.41'
    ext.usb4java_version = '1.2.0'
    ext.rxusbVersion = '1.0.4'

    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'net.researchgate:gradle-release:2.4.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'net.researchgate.release'
apply plugin: 'maven'
apply plugin: 'signing'


sourceCompatibility = 1.6

repositories {
    mavenCentral()
    maven {
        url 'http://nexus.eraga.net/content/repositories/public-releases/'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compile "org.usb4java:usb4java:$usb4java_version"

//        compile project(":core")
    compile "net.eraga.rxusb:core:$rxusbVersion"

}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

configurations {
    archives {
        extendsFrom configurations.default
    }
}

signing {
    required { hasProperty("release") && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }


        repository(url: "http://nexus.eraga.net/content/repositories/public-releases/") {
            authentication(userName: nexusUsername, password: nexusPassword)
        }

        pom.project {
            //noinspection GroovyAssignabilityCheck
            name 'RxUsb libusb for windows/osx/linux wrapper'
            packaging 'jar'
            description 'RxUsb is a cross-platform USB facade library'
            url 'https://github.com/eraga/rxusb'

            scm {
                url 'scm:git@github.com:eraga/rxusb.git'
                connection 'scm:git@github.com:eraga/rxusb.git'
                developerConnection 'scm:git@github.com:eraga/rxusb.git'
            }

            licenses {
                license {
                    //noinspection GroovyAssignabilityCheck
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    //noinspection GroovyAssignabilityCheck
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'tntclaus'
                    //noinspection GroovyAssignabilityCheck
                    name 'Klaus Schwartz'
                    email 'tntclaus@gmail.com'
                }
            }
        }
    }
}


release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '$name-$version'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    buildTasks = ['build']


    scmAdapters = [
            GitAdapter
    ]

    git {
        requireBranch = 'release'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
//        signTag = false
    }


}

afterReleaseBuild.dependsOn uploadArchives
