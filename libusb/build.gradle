import net.researchgate.release.GitAdapter

group 'net.eraga.rxusb'
version "$version"

buildscript {
    ext.kotlin_version = '1.2.60'
    ext.usb4java_version = '1.3.0'
    ext.rxusbVersion = '1.0.6-SNAPSHOT'

    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'net.researchgate:gradle-release:2.8.1'
    }
}

apply plugin: 'kotlin'
apply plugin: 'net.researchgate.release'
apply plugin: 'signing'
apply plugin: 'maven-publish'


sourceCompatibility = 1.6

repositories {
    mavenCentral()
    maven {
        url 'https://packages.eraga.net/repository/eraga-public-maven-unstable/'
    }
    maven {
        url 'https://packages.eraga.net/repository/eraga-public-maven-releases/'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compile "org.usb4java:usb4java:$usb4java_version"
    compile project(":core")
    compile "net.eraga.rxusb:core:$rxusbVersion"

}


task sourceJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {

                name = "RxUsb libusb for windows/osx/linux wrapper"
                description = "RxUsb is a cross-platform USB facade library"
                url = "https://github.com/eraga/rxusb"

                scm {
                    url = "scm:git@github.com:eraga/rxusb.git"
                    connection = "scm:git@github.com:eraga/rxusb.git"
                    developerConnection = "scm:git@github.com:eraga/rxusb.git"
                }

                licenses {
                    license {
                        //noinspection GroovyAssignabilityCheck
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        //noinspection GroovyAssignabilityCheck
                        distribution = "repo"
                    }
                }

                developers {
                    developer {
                        id = "tntclaus"
                        name = "Klaus Schwartz"
                        email = "tntclaus@gmail.com"
                    }
                }
            }

            groupId group
            artifactId archivesBaseName
            version version
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            def repositoryUrl = 'https://packages.eraga.net/repository/eraga-public-maven-releases/'
            def snapshotRepositoryUrl = 'https://packages.eraga.net/repository/eraga-public-maven-unstable/'
            url !version.endsWith("SNAPSHOT") ? repositoryUrl : snapshotRepositoryUrl
            credentials {
                username = "$nexusUsername"
                password = "$nexusPassword"
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { !version.endsWith("SNAPSHOT") }
}


release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '$name-$version'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    buildTasks = ['build']


    scmAdapters = [
            GitAdapter
    ]

    git {
        requireBranch = 'release'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
//        signTag = false
    }


}